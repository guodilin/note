import{_ as n,o as s,c as a,e as t}from"./app.ca1881d0.js";const p={},e=t(`<h1 id="四、数据容器" tabindex="-1"><a class="header-anchor" href="#四、数据容器" aria-hidden="true">#</a> 四、数据容器</h1><h2 id="_1-list-列表" tabindex="-1"><a class="header-anchor" href="#_1-list-列表" aria-hidden="true">#</a> 1. list 列表</h2><blockquote><p>基本语法，以<code>[]</code>作为标识，以逗号隔开，可以存储多个数据，且可以为不同类型的数据，支持嵌套</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 字面量</span>
<span class="token punctuation">[</span>元素<span class="token number">1</span><span class="token punctuation">,</span>元素<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>元素n<span class="token punctuation">]</span>
<span class="token comment"># 定义变量</span>
变量名称 <span class="token operator">=</span> <span class="token punctuation">[</span>元素<span class="token number">1</span><span class="token punctuation">,</span>元素<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>元素n<span class="token punctuation">]</span>
<span class="token comment">#定义空列表</span>
变量名称 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
变量名称 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 嵌套</span>
变量名称 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>实例</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># list列表</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">)</span>	<span class="token comment"># &lt;class &#39;list&#39;&gt;</span>
<span class="token comment"># 嵌套列表</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-读取元素" tabindex="-1"><a class="header-anchor" href="#_1-读取元素" aria-hidden="true">#</a> ①. 读取元素</h5><blockquote><p>说明，下标索引（取数据）</p></blockquote><ul><li>列表中的每一个元素，都有其位置下标索引</li><li>从前向后的方向，从0开始，依次递增，或者可以从后向左，从-1开始，依次递减（-1，-2，-3....）</li><li>一定不要超出范围否则会报错</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;zhang&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;wang&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;guo&quot;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># zhang</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># wang</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># guo</span>
<span class="token comment"># 从右</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name_list<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># zhang</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name_list<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># wang</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name_list<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># guo</span>
<span class="token comment"># 嵌套列表</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>	<span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>	<span class="token comment"># guodilin</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>index()</code>查找下标索引值</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">]</span>
my <span class="token operator">=</span> my_list<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my<span class="token punctuation">)</span>	<span class="token comment"># 0</span>
<span class="token comment"># 查找元素不存在的会报错</span>
my <span class="token operator">=</span> my_list<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;guo&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my<span class="token punctuation">)</span>	<span class="token comment"># 报错，is not guo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-新增元素" tabindex="-1"><a class="header-anchor" href="#_2-新增元素" aria-hidden="true">#</a> ②. 新增元素</h5><ol><li><code>.insert()</code></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法</span>
列表<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>下标<span class="token punctuation">,</span>元素<span class="token punctuation">)</span>	<span class="token comment"># 指定下标位置，插入指定的元素</span>
<span class="token comment"># 实例</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">]</span>
my_list<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;摩羯座&quot;</span><span class="token punctuation">)</span>	<span class="token comment"># [&quot;guodilin&quot;,&quot;摩羯座&quot;,1994,True]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>.append()</code></li></ol><blockquote><p>单个元素增加，在列表尾部追加数据</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法</span>
列表<span class="token punctuation">.</span>append<span class="token punctuation">(</span>元素<span class="token punctuation">)</span>
<span class="token comment"># 实例</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">]</span>
my_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&quot;我爱学习&quot;</span><span class="token punctuation">)</span>	<span class="token comment"># [&quot;guodilin&quot;,1994,True,&quot;我爱学习&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><code>.extend()</code></li></ol><blockquote><p>多个元素增加，依次在尾部追加数据</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法</span>
列表<span class="token punctuation">.</span>append<span class="token punctuation">(</span>其他列表元素<span class="token punctuation">)</span>
<span class="token comment"># 实例</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">]</span>
my_list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;我爱学习&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">]</span>
my_list<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>my_list2<span class="token punctuation">)</span> 	<span class="token comment"># [&quot;guodilin&quot;,1994,True,&quot;我爱学习&quot;,&quot;python&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-删除元素" tabindex="-1"><a class="header-anchor" href="#_3-删除元素" aria-hidden="true">#</a> ③. 删除元素</h5><ol><li><code>del</code></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法</span>
<span class="token keyword">del</span> 列表<span class="token punctuation">[</span>下标<span class="token punctuation">]</span>
<span class="token comment"># 实例</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">&quot;我爱学习&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">]</span>
<span class="token keyword">del</span> my_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>	<span class="token comment"># [&quot;guodilin&quot;,1994,&quot;我爱学习&quot;,&quot;python&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>.pop</code></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法</span>
列表<span class="token punctuation">.</span>pop<span class="token punctuation">[</span>下标<span class="token punctuation">]</span>
<span class="token comment"># 实例</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">&quot;我爱学习&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">]</span>
element <span class="token operator">=</span> my_list<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>	<span class="token comment"># 通过pop方法删除，取出的内容赋值给element = True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span>  <span class="token comment"># [&quot;guodilin&quot;,1994,&quot;我爱学习&quot;,&quot;python&quot;]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>	<span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><code>.remove()</code></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法</span>
列表<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>元素<span class="token punctuation">)</span>
<span class="token comment"># 实例</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">&quot;我爱学习&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">]</span>
my_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>	<span class="token comment"># 从第一个开始匹配，如果需要删除两个，需要调用两次</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span>	<span class="token comment"># [&quot;guodilin&quot;,1994,&quot;我爱学习&quot;,&quot;python&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-清空列表" tabindex="-1"><a class="header-anchor" href="#_4-清空列表" aria-hidden="true">#</a> ④. 清空列表</h5><p><code>.clear()</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法</span>
列表<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 实例</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">&quot;我爱学习&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">]</span>
my_list<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>	
<span class="token keyword">print</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span>	<span class="token comment"># []</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-修改元素" tabindex="-1"><a class="header-anchor" href="#_5-修改元素" aria-hidden="true">#</a> ⑤. 修改元素</h5><blockquote><p>语法</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>列表<span class="token punctuation">[</span>下标<span class="token punctuation">]</span> <span class="token operator">=</span> 值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">]</span>
my_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">19940113</span> <span class="token comment"># 修改后[&quot;guodilin&quot;,19940113,True]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-统计元素" tabindex="-1"><a class="header-anchor" href="#_6-统计元素" aria-hidden="true">#</a> ⑥. 统计元素</h5><ol><li><code>.count()</code></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法</span>
列表<span class="token punctuation">.</span>count<span class="token punctuation">(</span>元素<span class="token punctuation">)</span>
<span class="token comment"># 实例</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">]</span>
Count <span class="token operator">=</span> my_list<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>	<span class="token comment"># 计算该值出现过几次</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>Count<span class="token punctuation">)</span> <span class="token comment"># 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>len()</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法</span>
<span class="token builtin">len</span><span class="token punctuation">(</span>列表<span class="token punctuation">)</span>
<span class="token comment"># 实例</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span><span class="token number">1994</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">]</span>
Count <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span>	<span class="token comment"># 计算总共元素数量</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>Count<span class="token punctuation">)</span> <span class="token comment"># 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="列表遍历" tabindex="-1"><a class="header-anchor" href="#列表遍历" aria-hidden="true">#</a> 列表遍历</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># while</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span> <span class="token number">1994</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span>
i <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">:</span>
		element <span class="token operator">=</span> my_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
  	i <span class="token operator">+=</span> <span class="token number">1</span>

<span class="token comment"># for</span>
<span class="token keyword">for</span> element <span class="token keyword">in</span> my_list<span class="token punctuation">:</span>		<span class="token comment"># 直接从列表中一个一个赋值给临时变量</span>
		<span class="token keyword">print</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、tuple-元组" tabindex="-1"><a class="header-anchor" href="#二、tuple-元组" aria-hidden="true">#</a> 二、tuple 元组</h2><blockquote><p>元组一旦定义，就不可修改</p></blockquote><h5 id="_1-元组语法" tabindex="-1"><a class="header-anchor" href="#_1-元组语法" aria-hidden="true">#</a> ①. 元组语法</h5><div class="language-pyton line-numbers-mode" data-ext="pyton"><pre class="language-pyton"><code># 定义元组字面量
(元素, 元素, ....)
# 定义元组变量
变量名称 = (元素, 元素, ....)
# 定义空元组
变量名称 = ()
变量名称 = tuple()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span> <span class="token number">1994</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>	<span class="token comment"># &lt;class &#39;tuple&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意</p></blockquote><ul><li>元组不能修改，如果元组中有列表，元组中的列表才可修改</li><li>和list基本相同（有序、任意数量元素、允许重复元素），唯一不同在于不可修改</li><li>定义单独元组的时候需要加个逗号，否则不是元组，会是定义单独的元组类型</li></ul><h5 id="_2-下标索取" tabindex="-1"><a class="header-anchor" href="#_2-下标索取" aria-hidden="true">#</a> ②. 下标索取</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span> <span class="token number">1994</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>	<span class="token comment"># guodilin</span>
t_tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
t_tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>	<span class="token comment"># 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.index()</code></p><blockquote><p>查找元组</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span> <span class="token number">1994</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
t<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">)</span>	<span class="token comment"># 0</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.count()</code></p><blockquote><p>统计元组中出现多少个数据</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
t<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>	<span class="token comment"># 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>len()</code></p><blockquote><p>统计总供元组里的数据总数</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token builtin">len</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>	<span class="token comment"># 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-遍历" tabindex="-1"><a class="header-anchor" href="#_3-遍历" aria-hidden="true">#</a> ③. 遍历</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;guodilin&quot;</span><span class="token punctuation">,</span> <span class="token number">1994</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token comment"># while</span>
i <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>
		element <span class="token operator">=</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span>	<span class="token comment"># 下标方式获取数据</span>
  	<span class="token keyword">print</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>	<span class="token comment"># 得到每个数据</span>
  	i <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token comment"># for</span>
<span class="token keyword">for</span> element <span class="token keyword">in</span> t<span class="token punctuation">:</span>	<span class="token comment"># 直接从列表中一个一个赋值给临时变量</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>	<span class="token comment"># 得到每个数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、str-字符串" tabindex="-1"><a class="header-anchor" href="#三、str-字符串" aria-hidden="true">#</a> 三、str 字符串</h2><blockquote><p>字符串也是字符的容器，每一个也有下标</p></blockquote><ul><li>字符串不可修改的容器</li><li>只能存储字符串，支持下标索引，允许重复字符串存在，支持循环遍历</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_str <span class="token operator">=</span> <span class="token string">&quot;guodilin&quot;</span>
my_str<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>	<span class="token comment"># o</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-index" tabindex="-1"><a class="header-anchor" href="#_1-index" aria-hidden="true">#</a> ①. index()</h5><blockquote><p>查找字符串下标</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_str <span class="token operator">=</span> <span class="token string">&quot;guodilin&quot;</span>
my_str<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;di&quot;</span><span class="token punctuation">)</span>	<span class="token comment"># 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-replace" tabindex="-1"><a class="header-anchor" href="#_2-replace" aria-hidden="true">#</a> ②. replace()</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>m_str <span class="token operator">=</span> <span class="token string">&quot;myguodilin&quot;</span>
my_str <span class="token operator">=</span> m_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;my&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;我叫&quot;</span><span class="token punctuation">)</span>	
<span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">)</span>	<span class="token comment"># 得到新字符串	&quot;我叫guodilin&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-split" tabindex="-1"><a class="header-anchor" href="#_3-split" aria-hidden="true">#</a> ③. split()</h5><blockquote><p>字符串分割</p></blockquote><ul><li>语法：字符串.split(分割字符串)</li><li>功能：按照指定的分割符字符串，将字符串划分多个字符串，并存入列表对象中</li><li>注意：字符串本身不变，而是得到一个列表对象</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_str <span class="token operator">=</span> <span class="token string">&quot;hello python guodilin 好好学习&quot;</span>
my_str_list <span class="token operator">=</span> my_str<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>	<span class="token comment"># 用什么来分割</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_str_list<span class="token punctuation">)</span>	<span class="token comment"># [&quot;hello&quot;, &quot;python&quot;, &quot;guodilin&quot;, &quot;好好学习&quot;]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>my_str_list<span class="token punctuation">)</span><span class="token punctuation">)</span>	<span class="token comment"># &lt;class &#39;list&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-strip" tabindex="-1"><a class="header-anchor" href="#_4-strip" aria-hidden="true">#</a> ④. strip()</h5><blockquote><p>字符串的规整操作（去前后字符串）</p></blockquote><ol><li>字符串的规整操作（去前后空格）</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法：字符串.strip()</span>
my_str <span class="token operator">=</span> <span class="token string">&quot; guodilin &quot;</span>
<span class="token comment"># 不传参数，去除前后空格</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>	<span class="token comment"># &quot;guodilin&quot;</span>
<span class="token comment"># </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>字符串的规整操作（去前后指定字符串）</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法：字符串.strip(字符串)</span>
my_str <span class="token operator">=</span> <span class="token string">&quot;12guodilin21&quot;</span>
<span class="token comment"># 按照单个字符去除</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;12&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>	<span class="token comment"># &quot;guodilin&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意：传入的是<code>&quot;12&quot;</code> 其实就是：<code>&quot;1&quot;</code>和<code>&quot;2&quot;</code>都会移除，是按照单个字符。</li></ul><h5 id="_5-count" tabindex="-1"><a class="header-anchor" href="#_5-count" aria-hidden="true">#</a> ⑤. count()</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_str <span class="token operator">=</span> <span class="token string">&quot;abcabdabdd&quot;</span>
my_srt<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&quot;ab&quot;</span><span class="token punctuation">)</span>	<span class="token comment"># 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-len" tabindex="-1"><a class="header-anchor" href="#_6-len" aria-hidden="true">#</a> ⑥. len()</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_str <span class="token operator">=</span> <span class="token string">&quot;abcabdabdd&quot;</span>
<span class="token builtin">len</span><span class="token punctuation">(</span>my_str<span class="token punctuation">)</span>	<span class="token comment"># 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_7-遍历" tabindex="-1"><a class="header-anchor" href="#_7-遍历" aria-hidden="true">#</a> ⑦. 遍历</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_str <span class="token operator">=</span> <span class="token string">&quot;guodilin&quot;</span>
<span class="token comment"># while</span>
i <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>my_str<span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
  	i<span class="token operator">+=</span><span class="token number">1</span>

<span class="token comment"># for</span>
<span class="token keyword">for</span> i my_str<span class="token punctuation">:</span>
  	<span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、序列" tabindex="-1"><a class="header-anchor" href="#四、序列" aria-hidden="true">#</a> 四、序列</h2><blockquote><p>语法：序列[起始下标:结束下标:步长]</p></blockquote><ul><li>序列是指：内容连续、有序，可使用下标索引的一类数据容器</li><li>列表、元组、字符串，均可以视为序列</li><li>起始下标从何处开始，可以留空，留空视为从头开始</li><li>结束下标表示何处结束，可以留空，留空视为截取到结尾</li><li>步长表示，依次取元素的间隔 <ul><li>步长1表示，一个个取元素</li><li>步长2表示，每次跳过1个元素取</li><li>步长n表示，每次跳过n-1个元素取</li><li>步长为负数表示，反向取（注意，起始下标和结束下标也要反向标记）</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 对list进行切片，从1开始，4结束，步长1</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>
new_list <span class="token operator">=</span> my_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>	<span class="token comment"># 步长默认是1，可以省略</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_list<span class="token punctuation">)</span>	<span class="token comment"># [1,2,3]	# 不含4本身</span>
<span class="token comment"># 对tuple进行切片，从头开始，到最后结束，步长1</span>
my_tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>
my_tuple<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>	<span class="token comment"># 开始结束步长为1可以可以省略不写</span>
<span class="token comment"># 对str进行切片，从头开始，到最后结束，步长为2</span>
my_str <span class="token operator">=</span> <span class="token string">&quot;01234567&quot;</span>
new_str<span class="token operator">=</span> my_str<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_srt<span class="token punctuation">)</span> <span class="token comment"># 0246</span>
<span class="token comment"># 对str进行切片，从头开始，到最后结束，步长-1</span>
my_str <span class="token operator">=</span> <span class="token string">&quot;01234567&quot;</span>
new_str <span class="token operator">=</span> my_str<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>	<span class="token comment"># 等同于序列反转了</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_str<span class="token punctuation">)</span>	<span class="token comment"># 76543210</span>
<span class="token comment"># 对列表进行切片，从3开始，到1结束，步长-1</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>
new_list<span class="token operator">=</span> my_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_list<span class="token punctuation">)</span> <span class="token comment"># [3, 2]</span>
<span class="token comment"># 对元组进行切片，从头开始，到尾结束，步长-2</span>
my_tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>
new_tuple <span class="token operator">=</span> my_tuple<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_tuple<span class="token punctuation">)</span> <span class="token comment"># (6,4,2,0)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_str <span class="token operator">=</span> <span class="token string">&quot;行看我,nohtyp学,nilidoug&quot;</span>
<span class="token comment"># 切取字符串，倒序</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># 倒序字符串，切取</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># split分割&quot;,&quot;在取列表1中的nohtyp学，利用.replace删除学，在倒序</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_str<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;学&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、set-集合" tabindex="-1"><a class="header-anchor" href="#五、set-集合" aria-hidden="true">#</a> 五、set 集合</h2><blockquote><p>不支持元素重复（自带去重功能）、并且内容无序</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 定义集合字面量</span>
<span class="token punctuation">{</span>元素<span class="token punctuation">,</span> 元素<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> 元素<span class="token punctuation">}</span>
<span class="token comment"># 定义集合变量</span>
变量名称 <span class="token operator">=</span> <span class="token punctuation">{</span>元素<span class="token punctuation">,</span> 元素<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> 元素<span class="token punctuation">}</span>
<span class="token comment">#定义空集合</span>
变量名称 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-add" tabindex="-1"><a class="header-anchor" href="#_1-add" aria-hidden="true">#</a> ①. add()</h5><blockquote><p>添加元素</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_set <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;我爱学习&quot;</span><span class="token punctuation">}</span>
<span class="token comment"># 添加元素</span>
my_set<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&quot;我爱编程&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span>	<span class="token comment"># {&quot;hello world&quot;, &quot;python&quot;, &quot;我爱学习&quot;, &quot;我爱编程&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-remove" tabindex="-1"><a class="header-anchor" href="#_2-remove" aria-hidden="true">#</a> ②. remove()</h5><blockquote><p>移除元素</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_set <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;我爱学习&quot;</span><span class="token punctuation">}</span>
my_set<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">)</span>	<span class="token comment"># {&quot;hello world&quot;, &quot;我爱学习&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-pop" tabindex="-1"><a class="header-anchor" href="#_3-pop" aria-hidden="true">#</a> ③. pop()</h5><blockquote><p>随机取出一个元素</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_set <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;我爱学习&quot;</span><span class="token punctuation">}</span>
element <span class="token operator">=</span> my_set<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 随机得到一个元素</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-clear" tabindex="-1"><a class="header-anchor" href="#_4-clear" aria-hidden="true">#</a> ④. clear()</h5><blockquote><p>清空集合</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_set <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;我爱学习&quot;</span><span class="token punctuation">}</span>
my_set<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># {}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-difference" tabindex="-1"><a class="header-anchor" href="#_5-difference" aria-hidden="true">#</a> ⑤. difference()</h5><blockquote><p>取2集合差</p></blockquote><ul><li>语法：<code>集合1.difference(集合2)</code></li><li>功能：取出集合1和集合2的差集(集合1有而集合2没有的)</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span>
set3 <span class="token operator">=</span> set1<span class="token punctuation">.</span>difference<span class="token punctuation">(</span>set2<span class="token punctuation">)</span>  <span class="token comment"># 得到新的集合</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set3<span class="token punctuation">)</span>  <span class="token comment"># {2, 3}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-difference-update" tabindex="-1"><a class="header-anchor" href="#_6-difference-update" aria-hidden="true">#</a> ⑥. difference_update()</h5><blockquote><p>消除2个集合的差集</p></blockquote><ul><li>语法：<code>集合1.difference_update(集合2)</code></li><li>功能：对比集合1和集合2，在集合1内，删除和集合2相同的元素</li><li>结果：集合1被修改，集合2不变</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span>
set1<span class="token punctuation">.</span>difference_update<span class="token punctuation">(</span>set2<span class="token punctuation">)</span>  <span class="token comment"># 消除差集</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span>  <span class="token comment"># {2, 3}</span>
<span class="token comment"># 2个集合合并为一个</span>
<span class="token comment"># 统计集合元素数量</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_7-union" tabindex="-1"><a class="header-anchor" href="#_7-union" aria-hidden="true">#</a> ⑦. union</h5><blockquote><p>两个集合合并</p></blockquote><ul><li><p>语法：<code>集合1.union(集合2)</code></p></li><li><p>功能：将集合1和集合2组合成新集合</p></li><li><p>结果：得到新集合，集合1和集合2不变，如果有集合1和集合2有相同的元素，只保留一个元素</p></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span>
set3 <span class="token operator">=</span> set1<span class="token punctuation">.</span>union<span class="token punctuation">(</span>set2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set3<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3, 5, 6}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_8-len" tabindex="-1"><a class="header-anchor" href="#_8-len" aria-hidden="true">#</a> ⑧. len()</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
set2 <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set2<span class="token punctuation">)</span>  <span class="token comment"># 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>⑨. 遍历</p><ul><li>集合无序号，所以不能使用<code>while</code>循环遍历，只能使用<code>for</code>循环</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> set1<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_10-实例" tabindex="-1"><a class="header-anchor" href="#_10-实例" aria-hidden="true">#</a> ⑩. 实例</h5><blockquote><p>列表去重</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;zhang&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;wang&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;guo&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;zhang&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;wang&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;guo&quot;</span><span class="token punctuation">]</span>
my_set <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 定义空集合</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> my_list<span class="token punctuation">:</span>
    my_set<span class="token punctuation">.</span>add<span class="token punctuation">(</span>i<span class="token punctuation">)</span>  <span class="token comment"># 新增集合</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span>  <span class="token comment"># {&#39;wang&#39;, &#39;guo&#39;, &#39;zhang&#39;}</span>

<span class="token comment"># 转换回列表</span>
new_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> my_set<span class="token punctuation">:</span>
    new_list<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>new_list<span class="token punctuation">)</span>  <span class="token comment"># [&#39;zhang&#39;, &#39;guo&#39;, &#39;wang&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、dict-字典" tabindex="-1"><a class="header-anchor" href="#六、dict-字典" aria-hidden="true">#</a> 六、dict 字典</h2><blockquote><p>字典的定义，同样使用<code>{}</code>，不过存储的元素是一个个的<code>键值对</code></p></blockquote><ul><li>字典不可以重复，也没有下标序号</li><li>key不可以为字典</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 定义字典字面量</span>
<span class="token punctuation">{</span>key<span class="token punctuation">:</span>value<span class="token punctuation">,</span> key<span class="token punctuation">:</span>value<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span>value<span class="token punctuation">}</span>
<span class="token comment"># 定义字典变量</span>
my_dict <span class="token operator">=</span> <span class="token punctuation">{</span>key<span class="token punctuation">:</span>value<span class="token punctuation">,</span> key<span class="token punctuation">:</span>value<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span>value<span class="token punctuation">}</span>
<span class="token comment"># 定义空字典</span>
my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
my_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-取字典的值" tabindex="-1"><a class="header-anchor" href="#_1-取字典的值" aria-hidden="true">#</a> ①. 取字典的值</h5><blockquote><p>使用key获取value</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;王力&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;王五&quot;</span><span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">[</span><span class="token string">&quot;王力&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># 99</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-字典嵌套" tabindex="-1"><a class="header-anchor" href="#_2-字典嵌套" aria-hidden="true">#</a> ②. 字典嵌套</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_dict <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;王力&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;语文&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;数学&quot;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;英语&quot;</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;王五&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;语文&quot;</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token string">&quot;数学&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;英语&quot;</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">[</span><span class="token string">&quot;王力&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;数学&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-新增元素" tabindex="-1"><a class="header-anchor" href="#_3-新增元素" aria-hidden="true">#</a> ③. 新增元素</h5><ul><li>语法：<code>字典[key] = value</code></li><li>结果：字典被修改，新增了元素</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;语文&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;数学&quot;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;英语&quot;</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">}</span>

<span class="token comment"># 新增</span>
my_dict<span class="token punctuation">[</span><span class="token string">&quot;化学&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99.5</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span>  <span class="token comment"># {&#39;语文&#39;: 99, &#39;数学&#39;: 100, &#39;英语&#39;: 120, &#39;化学&#39;: 99.5}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-更新元素" tabindex="-1"><a class="header-anchor" href="#_4-更新元素" aria-hidden="true">#</a> ④. 更新元素</h5><ul><li>语法：<code>字典[key] = value</code></li><li>结果：字典被修改，元素被更新</li><li>和新增一样，如果字典中key存在则更新，如果没有则新增</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;语文&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;数学&quot;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;英语&quot;</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">}</span>

<span class="token comment"># 更新</span>
my_dict<span class="token punctuation">[</span><span class="token string">&quot;语文&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">120</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span>  <span class="token comment"># {&#39;语文&#39;: 120, &#39;数学&#39;: 100, &#39;英语&#39;: 120}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-pop" tabindex="-1"><a class="header-anchor" href="#_5-pop" aria-hidden="true">#</a> ⑤. pop()</h5><blockquote><p>删除元素</p></blockquote><ul><li>语法：<code>字典.pop(key)</code></li><li>结果：获取指定的key的value，同时字典被修改，指定的key的数据被删除</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;语文&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;数学&quot;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;英语&quot;</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">}</span>

<span class="token comment"># 删除</span>
my_dict<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">&quot;英语&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span>  <span class="token comment"># {&#39;语文&#39;: 99, &#39;数学&#39;: 100}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-clear" tabindex="-1"><a class="header-anchor" href="#_6-clear" aria-hidden="true">#</a> ⑥. clear()</h5><blockquote><p>清空字典</p></blockquote><ul><li>语法：<code>字典.clear()</code></li><li>结果：字典被修改，元素被清空</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;语文&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;数学&quot;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;英语&quot;</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">}</span>

<span class="token comment"># 清空字典</span>
my_dict<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span>  <span class="token comment"># {}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_7-keys" tabindex="-1"><a class="header-anchor" href="#_7-keys" aria-hidden="true">#</a> ⑦. keys()</h5><blockquote><p>获取全部的key</p></blockquote><ul><li>语法：字典.keys()</li><li>结果：得到字典中的全部key</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;语文&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;数学&quot;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;英语&quot;</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">}</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># dict_keys([&#39;语文&#39;, &#39;数学&#39;, &#39;英语&#39;])</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_8-values" tabindex="-1"><a class="header-anchor" href="#_8-values" aria-hidden="true">#</a> ⑧. values()</h5><blockquote><p>获取全部的value</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;语文&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;数学&quot;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;英语&quot;</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">}</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_9-遍历" tabindex="-1"><a class="header-anchor" href="#_9-遍历" aria-hidden="true">#</a> ⑨. 遍历</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;语文&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;数学&quot;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;英语&quot;</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">}</span>

keys <span class="token operator">=</span> my_dict<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取key</span>

<span class="token comment"># 方法1</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> keys<span class="token punctuation">:</span>	<span class="token comment"># 获取到的key给临时变量</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> my_dict<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 方法2</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> my_dict<span class="token punctuation">:</span>	<span class="token comment"># 直接遍历</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> my_dict<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_10-len" tabindex="-1"><a class="header-anchor" href="#_10-len" aria-hidden="true">#</a> ⑩. len()</h5><blockquote><p>统计key数量</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;语文&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;数学&quot;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;英语&quot;</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">}</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_101-实例" tabindex="-1"><a class="header-anchor" href="#_101-实例" aria-hidden="true">#</a> ⑩①. 实例</h5><blockquote><p>级别为1的人员，级别加1和工资加1000</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_dict <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;王力鸿&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;部门&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;科技部&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;工资&quot;</span><span class="token punctuation">:</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token string">&quot;级别&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;周杰伦&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;部门&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;市场部&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;工资&quot;</span><span class="token punctuation">:</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token string">&quot;级别&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;林俊杰&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;部门&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;市场部&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;工资&quot;</span><span class="token punctuation">:</span> <span class="token number">7000</span><span class="token punctuation">,</span> <span class="token string">&quot;级别&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;张雪&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;部门&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;科技部&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;工资&quot;</span><span class="token punctuation">:</span> <span class="token number">4000</span><span class="token punctuation">,</span> <span class="token string">&quot;级别&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;王五&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;部门&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;市场部&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;工资&quot;</span><span class="token punctuation">:</span> <span class="token number">6000</span><span class="token punctuation">,</span> <span class="token string">&quot;级别&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> my_dict<span class="token punctuation">:</span>
    <span class="token keyword">if</span> my_dict<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;级别&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
        my_dict<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;级别&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span>  <span class="token comment"># 级别+1</span>
        my_dict<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;工资&quot;</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1000</span>  <span class="token comment"># 工资+1000</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">continue</span>  <span class="token comment"># 跳过循环</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span>
<span class="token comment"># {</span>
<span class="token comment"># &#39;王力鸿&#39;: {&#39;部门&#39;: &#39;科技部&#39;, &#39;工资&#39;: 4000, &#39;级别&#39;: 2},</span>
<span class="token comment"># &#39;周杰伦&#39;: {&#39;部门&#39;: &#39;市场部&#39;, &#39;工资&#39;: 5000, &#39;级别&#39;: 2},</span>
<span class="token comment"># &#39;林俊杰&#39;: {&#39;部门&#39;: &#39;市场部&#39;, &#39;工资&#39;: 7000, &#39;级别&#39;: 3},</span>
<span class="token comment"># &#39;张雪&#39;: {&#39;部门&#39;: &#39;科技部&#39;, &#39;工资&#39;: 5000, &#39;级别&#39;: 2},</span>
<span class="token comment"># &#39;王五&#39;: {&#39;部门&#39;: &#39;市场部&#39;, &#39;工资&#39;: 6000, &#39;级别&#39;: 2}</span>
<span class="token comment"># }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_102-总结" tabindex="-1"><a class="header-anchor" href="#_102-总结" aria-hidden="true">#</a> ⑩②. 总结</h5><blockquote><p>数据容器可以从以下视觉进行简单的分类</p></blockquote><ul><li>是否支持下标索引 <ul><li>支持：列表、元组、字符串 - 序列类型</li><li>不支持：集合、字典 - 非序列类型</li></ul></li><li>是否支持重复元素 <ul><li>支持：列表、元组、字符串 - 序列类型</li><li>不支持：集合、字典 - 非序列类型</li></ul></li><li>是否可以修改 <ul><li>支持：列表、集合、字典</li><li>不支持：元组、字符串</li></ul></li></ul><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;">列表</th><th style="text-align:center;">元组</th><th style="text-align:center;">字符串</th><th style="text-align:center;">集合</th><th style="text-align:center;">字典</th></tr></thead><tbody><tr><td style="text-align:center;">元素数量</td><td style="text-align:center;">支持多个</td><td style="text-align:center;">支持多个</td><td style="text-align:center;">支持多个</td><td style="text-align:center;">支持多个</td><td style="text-align:center;">支持多个</td></tr><tr><td style="text-align:center;">元素类型</td><td style="text-align:center;">任意</td><td style="text-align:center;">任意</td><td style="text-align:center;">仅字符</td><td style="text-align:center;">任意</td><td style="text-align:center;"><code>key:value</code>；key：除字典外任意类型 ；value：任意类型</td></tr><tr><td style="text-align:center;">下标索引</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td><td style="text-align:center;">不支持</td><td style="text-align:center;">不支持</td></tr><tr><td style="text-align:center;">重复元素</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td><td style="text-align:center;">不支持</td><td style="text-align:center;">不支持</td></tr><tr><td style="text-align:center;">可修改性</td><td style="text-align:center;">支持</td><td style="text-align:center;">不支持</td><td style="text-align:center;">不支持</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td></tr><tr><td style="text-align:center;">数据有序</td><td style="text-align:center;">是</td><td style="text-align:center;">是</td><td style="text-align:center;">是</td><td style="text-align:center;">否</td><td style="text-align:center;">否</td></tr><tr><td style="text-align:center;">语法</td><td style="text-align:center;">[]</td><td style="text-align:center;">()</td><td style="text-align:center;">&quot;&quot;</td><td style="text-align:center;">{}</td><td style="text-align:center;"><code>{key:value}</code></td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
my_tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
my_str <span class="token operator">=</span> <span class="token string">&quot;abcdefgh&quot;</span>
my_set <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span>
my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;ad&quot;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;da&quot;</span><span class="token punctuation">:</span> <span class="token number">199</span><span class="token punctuation">}</span>

<span class="token comment"># 通用统计</span>
<span class="token comment"># 长度</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 6</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>my_tuple<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 6</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>my_str<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 8</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 6</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 2</span>
<span class="token comment"># 最大</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 6</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>my_tuple<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 6</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>my_str<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># h</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 6</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># da</span>
<span class="token comment"># 最小</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">min</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">min</span><span class="token punctuation">(</span>my_tuple<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">min</span><span class="token punctuation">(</span>my_str<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># a</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">min</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">min</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># ad</span>
<span class="token comment"># 通用转换功能</span>
<span class="token comment"># list()    将给定容器转换为列表</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;元组转列表：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">list</span><span class="token punctuation">(</span>my_tuple<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [1, 2, 3, 4, 5, 6]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;字符转列表：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">list</span><span class="token punctuation">(</span>my_str<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;集合转列表：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">list</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [1, 2, 3, 4, 5, 6]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;字典转列表：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">list</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [&#39;ad&#39;, &#39;da&#39;]</span>
<span class="token comment"># str()  将给定容器转换为字符串</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;列表转字符：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">str</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [1, 2, 3, 4, 5, 6]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;元组转字符：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">str</span><span class="token punctuation">(</span>my_tuple<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># (1, 2, 3, 4, 5, 6)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;集合转字符：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">str</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3, 4, 5, 6}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;字典转字符：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">str</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># {&#39;ad&#39;: 99, &#39;da&#39;: 199}</span>
<span class="token comment"># tuple()    将给定容器转换为元组</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;列表转元组：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">tuple</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># (1, 2, 3, 4, 5, 6)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;字符转元组：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">tuple</span><span class="token punctuation">(</span>my_str<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># (&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;集合转元组：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">tuple</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># (1, 2, 3, 4, 5, 6)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;字典转元组：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">tuple</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># (&#39;ad&#39;, &#39;da&#39;)</span>

<span class="token comment"># set()  将给定容器转换为集合 会去重</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;列表转集合：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">set</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3, 4, 5, 6}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;字符转集合：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">set</span><span class="token punctuation">(</span>my_str<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># {&#39;d&#39;, &#39;b&#39;, &#39;g&#39;, &#39;c&#39;, &#39;h&#39;, &#39;a&#39;, &#39;f&#39;, &#39;e&#39;}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;元组转集合：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">set</span><span class="token punctuation">(</span>my_tuple<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3, 4, 5, 6}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;字典转集合：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">set</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># {&#39;da&#39;, &#39;ad&#39;}</span>

<span class="token comment"># 进行容器的排序，排序完后是列表类型 &lt;class &#39;list&#39;&gt;</span>
<span class="token comment"># sorted()</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;列表对象的排序结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [1, 2, 3, 4, 5, 6]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;元组对象的排序结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>my_tuple<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [1, 2, 3, 4, 5, 6]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;字符对象的排序结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>my_str<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;集合对象的排序结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>my_set<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [1, 2, 3, 4, 5, 6]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;字典对象的排序结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [&#39;ad&#39;, &#39;da&#39;]</span>
<span class="token comment"># 进行容器的反向排序，排序完后是列表类型 &lt;class &#39;list&#39;&gt;</span>
<span class="token comment"># sorted(容器, reverse=True)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;列表对象的反向排序结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>my_list<span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [6, 5, 4, 3, 2, 1]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;元组对象的反向排序结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>my_tuple<span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [6, 5, 4, 3, 2, 1]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;字符对象的反向排序结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>my_str<span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [&#39;h&#39;, &#39;g&#39;, &#39;f&#39;, &#39;e&#39;, &#39;d&#39;, &#39;c&#39;, &#39;b&#39;, &#39;a&#39;]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;集合对象的反向排序结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>my_set<span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [6, 5, 4, 3, 2, 1]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;字典对象的反向排序结果：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># [&#39;da&#39;, &#39;ad&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,171),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","Python_3.html.vue"]]);export{k as default};

import{_ as n,o as s,c as a,e}from"./app.ca1881d0.js";const p={},t=e(`<h1 id="三、基础语句" tabindex="-1"><a class="header-anchor" href="#三、基础语句" aria-hidden="true">#</a> 三、基础语句</h1><h2 id="_1-条件语句" tabindex="-1"><a class="header-anchor" href="#_1-条件语句" aria-hidden="true">#</a> 1. 条件语句</h2><h5 id="_1-if" tabindex="-1"><a class="header-anchor" href="#_1-if" aria-hidden="true">#</a> ①. if</h5><blockquote><p><code>if</code> 为<code>True</code>返回，否则，不返回</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>age <span class="token operator">=</span> <span class="token number">28</span>

<span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;成年人&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 条件成立返回的语句</span>
<span class="token comment"># 成年人</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token boolean">True</span>
<span class="token keyword">if</span> a<span class="token punctuation">:</span>
   <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># True 返回 ， False ,无返回</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># True ,返回 ， False ,无返回</span>


add<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># a</span>
add<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-if-else" tabindex="-1"><a class="header-anchor" href="#_2-if-else" aria-hidden="true">#</a> ②. if else</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>age <span class="token operator">=</span> <span class="token number">16</span>

<span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;成年人&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 条件成立返回的语句</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;未成年&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 条件不成立返回的语句</span>
<span class="token comment"># 未成年</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-if-elif-else" tabindex="-1"><a class="header-anchor" href="#_3-if-elif-else" aria-hidden="true">#</a> ③. if elif else</h5><blockquote><p>完成多条件判断</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>age <span class="token operator">=</span> <span class="token number">18</span>

<span class="token keyword">if</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> age <span class="token keyword">and</span> age <span class="token operator">&lt;=</span> <span class="token number">6</span><span class="token punctuation">:</span>  <span class="token comment"># 判断值是否在0~6之间</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;童年&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 条件成立返回的语句</span>
<span class="token keyword">elif</span> <span class="token number">6</span> <span class="token operator">&gt;</span> age <span class="token keyword">or</span> age <span class="token operator">&lt;=</span> <span class="token number">17</span><span class="token punctuation">:</span>  <span class="token comment"># 判断值是否在7~17之间</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;少年&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 条件不成立返回的语句</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;青年&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 条件不成立返回的语句</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>猜数字示例</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>num <span class="token operator">=</span> <span class="token number">5</span>

<span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请猜一个数字：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> num<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;恭喜您，第一次就猜对了！&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">elif</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;猜错了，请在猜一次：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> num<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;恭喜您，第二次就猜对了！&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">elif</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;猜错了，请在猜一次：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> num<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;恭喜您，最后一次猜对了！&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;抱歉，猜错了哦&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-判断语句嵌套" tabindex="-1"><a class="header-anchor" href="#_4-判断语句嵌套" aria-hidden="true">#</a> ④. 判断语句嵌套</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入您的年龄：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">17</span><span class="token punctuation">:</span>  <span class="token comment"># 满足进入第二个if判断</span>
    <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;您的VIP级别：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">8</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;您本月可以免费上网一天&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;抱歉，你本月没有免费上网时长&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;抱歉，未成年禁止入内哦&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-循环语句" tabindex="-1"><a class="header-anchor" href="#_2-循环语句" aria-hidden="true">#</a> 2. 循环语句</h2><h5 id="_1-while" tabindex="-1"><a class="header-anchor" href="#_1-while" aria-hidden="true">#</a> ①. while</h5><blockquote><p>循环注意事项：</p></blockquote><ul><li>条件需提供布尔类型结果，True继续执行，False停止执行</li><li>注意循环终止条件，否则进入无限循环</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>i <span class="token operator">=</span> <span class="token number">1</span>

<span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">:</span>  <span class="token comment"># i到101的时候,为False跳出循环，不在执行</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;循环次数</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 1-100累加的和</span>
i <span class="token operator">=</span> <span class="token number">1</span>
s <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">:</span>
    s <span class="token operator">+=</span> i  <span class="token comment"># s = 0+1   s = 1+2 s = 3+3 s=6+4</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>while嵌套循环</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 每天对她说我喜欢你10次，每次并送99朵玫瑰花</span>
i <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;今天是第</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">天&quot;</span></span><span class="token punctuation">)</span>
    a <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">while</span> a <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我喜欢你&quot;</span><span class="token punctuation">)</span>
        a <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;送出99朵玫瑰花&quot;</span><span class="token punctuation">)</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;一共持续</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">天&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>示例一</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> random

n <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 生成随机数</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
flag <span class="token operator">=</span> <span class="token boolean">True</span>  <span class="token comment"># 默认循环</span>
count <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 默认次数</span>
<span class="token keyword">while</span> flag<span class="token punctuation">:</span>  <span class="token comment"># 先设置无限循环，成功后改为False跳过循环</span>
    a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入值&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 进入循环输入一次</span>
    count <span class="token operator">+=</span> <span class="token number">1</span>  <span class="token comment"># 循环一次加一次</span>
    <span class="token keyword">if</span> a <span class="token operator">&lt;</span> n<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;太小了&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> a <span class="token operator">&gt;</span> n<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;太大了&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;恭喜你，猜中了&quot;</span><span class="token punctuation">)</span>
        flag <span class="token operator">=</span> <span class="token boolean">False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;您一共猜了</span><span class="token interpolation"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span><span class="token string">次&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>示例二 乘法表</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>i <span class="token operator">=</span> <span class="token number">1</span>

<span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">:</span>
    j <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">while</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>j<span class="token punctuation">}</span></span><span class="token string"> * </span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span>j <span class="token operator">*</span> i<span class="token punctuation">}</span></span><span class="token string">\\t&quot;</span></span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
        j <span class="token operator">+=</span> <span class="token number">1</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-for" tabindex="-1"><a class="header-anchor" href="#_2-for" aria-hidden="true">#</a> ②. for</h5><blockquote><p>while循环和for循环区别</p></blockquote><ul><li>while循环的循环条件是<code>自定义</code>的，自行控制循环条件</li><li>for循环是一种<code>轮询</code>机制，是对一批内容进行逐个处理</li></ul><ol><li>语法</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> 临时变量 <span class="token keyword">in</span> 待处理数据集
    循环满足条件时执行的代码
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>遍历字符串示例</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token string">&quot;guodilin&quot;</span>
<span class="token keyword">for</span> item <span class="token keyword">in</span> name<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token comment"># 输出如下所示</span>
<span class="token comment"># g</span>
<span class="token comment"># u</span>
<span class="token comment"># o</span>
<span class="token comment"># d</span>
<span class="token comment"># i</span>
<span class="token comment"># l</span>
<span class="token comment"># i</span>
<span class="token comment"># n</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>for嵌套</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 乘法表</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 第一次 i = 1 下面循环完，后 i = 2，在次进入下方循环</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 第一次进入i = 1 j = 1 ,j 循环9次, 1*1,1*2~1*9</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>j<span class="token punctuation">}</span></span><span class="token string"> * </span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span>i <span class="token operator">*</span> j<span class="token punctuation">}</span></span><span class="token string">\\t&quot;</span></span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-range" tabindex="-1"><a class="header-anchor" href="#_3-range" aria-hidden="true">#</a> ③. range()</h5><blockquote><p>功能：获取一个数字序列</p></blockquote><ul><li>语法1 --- <code>range(num)</code></li><li>语法2 --- <code>range(num1, num2)</code></li><li>语法3 --- <code>range(num1, num2, step)</code></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法1 range(num)</span>
<span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment"># 1-10</span>

<span class="token comment"># 语法2 range(num1, num2)</span>
<span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment"># 5 6 7 8 9</span>

<span class="token comment"># 语法3 range(num1, num2, step)</span>
<span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 从5开始，到10结束（不包含10本身）的一个数字序列，数字之间的间隔是2</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment"># 5 7 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意事项</p></blockquote><ul><li>语法1从0开始，到<code>num</code>结束（不含<code>num</code>本身）</li><li>语法2从<code>num1</code>开始，到<code>num2</code>结束（不含<code>num2</code>本身）</li><li>语法3从<code>num1</code>开始，到<code>num2</code>结束（不含<code>num2</code>本身），步长以<code>step</code>值为准</li><li><code>range()</code>的用途很多，多数用在<code>for</code>循环场景</li></ul><blockquote><p>示例</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 循环10次</span>
<span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;送玫瑰花&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 循环10次</span>

<span class="token comment"># 判断有几个偶数，取余。</span>
num <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        num <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>  <span class="token comment"># 49</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-continue" tabindex="-1"><a class="header-anchor" href="#_4-continue" aria-hidden="true">#</a> ④. continue</h5><blockquote><p>作用：中断所在循环的当次执行，直接进入下一次</p></blockquote><ul><li>用于中断 本次循环，直接进入下一次循环</li><li>for循环和while循环，效果一致</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;语句1&quot;</span><span class="token punctuation">)</span>    <span class="token comment"># 执行5次</span>
    <span class="token keyword">continue</span>
    <span class="token comment"># 下面语句不进入循环</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;语句2&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-break" tabindex="-1"><a class="header-anchor" href="#_5-break" aria-hidden="true">#</a> ⑤. break</h5><blockquote><p>作用：直接结束所在的循环</p></blockquote><ul><li>用于直接结束循环体</li><li>for循环和while循环，效果一致</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;语句1&quot;</span><span class="token punctuation">)</span>    <span class="token comment"># 只执行1次</span>
    <span class="token keyword">break</span>
    <span class="token comment"># 下面语句不进入循环</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;语句2&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;语句1&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 只执行1次</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 执行5次</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;语句2&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 执行1次就结束循环</span>
        <span class="token keyword">break</span>
        <span class="token comment"># 下面语句不进入循环</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;语句3&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;语句4&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 结果是：语句1,语句2,语句4(一起执行5次)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-练习案例" tabindex="-1"><a class="header-anchor" href="#_6-练习案例" aria-hidden="true">#</a> ⑥. 练习案例</h5><blockquote><p>某公司，账户余额有1w元，给20名员工发工资。</p></blockquote><ul><li>员工编号从1到20，从编号1开始，依次领工资，每人可以领取1000元</li><li>领取工资时，财务判断员工的绩效分（1-10）（随机生成），如果低于5，不发工资，换下一位</li><li>如果工资发完，结束发工资</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> random

money <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    score <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token comment"># 生成随机数</span>
    <span class="token comment"># print(n)  # 得到随机1-10的数字</span>
    <span class="token keyword">if</span> score <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;员工</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">,绩效分</span><span class="token interpolation"><span class="token punctuation">{</span>score<span class="token punctuation">}</span></span><span class="token string">,不发工资&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">continue</span>    <span class="token comment"># 低于5不发工资，跳过循环</span>
    <span class="token keyword">elif</span> money <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        money <span class="token operator">-=</span> <span class="token number">1000</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;员工</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">发放1000，账户余额还剩</span><span class="token interpolation"><span class="token punctuation">{</span>money<span class="token punctuation">}</span></span><span class="token string">元&quot;</span></span><span class="token punctuation">)</span>
        <span class="token comment"># print(money)  # 剩余额度</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;工资发放完毕，下个月领取吧&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-函数" tabindex="-1"><a class="header-anchor" href="#_3-函数" aria-hidden="true">#</a> 3. 函数</h2><blockquote><p>你可以定义一个由自己想要功能的函数，以下是简单的规则：</p></blockquote><ul><li>函数代码块以 def 关键词开头，后接函数标识符名称和圆括号()。</li><li>任何传入参数和自变量必须放在圆括号中间。圆括号之间可以用于定义参数。</li><li>函数的第一行语句可以选择性地使用文档字符串—用于存放函数说明。</li><li>函数内容以冒号起始，并且缩进。</li><li>return [表达式] 结束函数，选择性地返回一个值给调用方。不带表达式的return相当于返回 None。</li></ul><h5 id="_1-语法" tabindex="-1"><a class="header-anchor" href="#_1-语法" aria-hidden="true">#</a> ①. 语法</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> 函数名<span class="token punctuation">(</span> 传入参数 <span class="token punctuation">)</span><span class="token punctuation">:</span>
   <span class="token comment"># 函数体</span>
   <span class="token keyword">return</span> 返回值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-函数调用" tabindex="-1"><a class="header-anchor" href="#_2-函数调用" aria-hidden="true">#</a> ②. 函数调用</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 有参数带参数，如果无可不带参数</span>
函数名<span class="token punctuation">(</span>参数<span class="token punctuation">)</span> 
函数名<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-函数的传入参数" tabindex="-1"><a class="header-anchor" href="#_3-函数的传入参数" aria-hidden="true">#</a> ③. 函数的传入参数</h5><blockquote><p>传入的参数不限制，传入的参数用逗号分隔</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 每次计算可以不固定值</span>
    result <span class="token operator">=</span> x <span class="token operator">+</span> y
    <span class="token comment"># x y 在调用函数的时候指定</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string"> + </span><span class="token interpolation"><span class="token punctuation">{</span>y<span class="token punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


<span class="token comment"># 指定x y 为2和5</span>
add<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>函数的定义中，提供x和y，称之为<code>形式参数(行参)</code>，表示函数声明将要使用2个参数，参数之间使用逗号进行分隔</li><li>函数调用中使用2和5，称之为<code>实际参数(实参)</code>表示函数执行时真正使用的参数值，传入的时候，按照顺序传入数据，使用逗号分隔</li></ul><h5 id="_4-关键字传参" tabindex="-1"><a class="header-anchor" href="#_4-关键字传参" aria-hidden="true">#</a> ④. 关键字传参</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">user_info</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;您的名字是：</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，年龄是：</span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string">，性别是</span><span class="token interpolation"><span class="token punctuation">{</span>gender<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

user_info<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;小郭&quot;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">28</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-参数默认值" tabindex="-1"><a class="header-anchor" href="#_5-参数默认值" aria-hidden="true">#</a> ⑤. 参数默认值</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">printinfo</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&quot;打印任何传入的字符串&quot;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Name: &quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Age &quot;</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span>
    <span class="token keyword">return</span>


<span class="token comment"># 调用printinfo函数</span>
printinfo<span class="token punctuation">(</span>age<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;miki&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># name miki age 50</span>
printinfo<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;miki&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># name miki age 35</span>
printinfo<span class="token punctuation">(</span><span class="token number">123456</span><span class="token punctuation">)</span>   <span class="token comment"># name:123456 age 35</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-不定长-位置" tabindex="-1"><a class="header-anchor" href="#_6-不定长-位置" aria-hidden="true">#</a> ⑥. 不定长 - 位置</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 不定长 - 位置 * 号  会得到一个元组</span>
<span class="token keyword">def</span> <span class="token function">user_info</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 一般命名为 args</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;tuple&#39;&gt;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>

user_info<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># (1, &#39;hello&#39;, &#39;python&#39;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_7-不定长-关键字" tabindex="-1"><a class="header-anchor" href="#_7-不定长-关键字" aria-hidden="true">#</a> ⑦. 不定长 - 关键字</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 不定长 - 关键字 ** 号    会得到一个字典</span>
<span class="token keyword">def</span> <span class="token function">user_info</span><span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 一般命名为 kwargs</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;dict&#39;&gt;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">)</span>

user_info<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;小郭&quot;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">28</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># {&#39;name&#39;: &#39;小郭&#39;, &#39;age&#39;: 28, &#39;gender&#39;: &#39;男&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_8-return" tabindex="-1"><a class="header-anchor" href="#_8-return" aria-hidden="true">#</a> ⑧. return</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>
    result <span class="token operator">=</span> x <span class="token operator">+</span> y
    <span class="token keyword">return</span> result


r <span class="token operator">=</span> add<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>	<span class="token comment"># 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>None类型</p></blockquote><ul><li>不带参数值值的<code>return</code>返回<code>None</code>，类型是<code>&lt;class &#39;NoneType&#39;&gt;</code></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 无return语句的函数返回值</span>
<span class="token keyword">def</span> <span class="token function">say_hi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你好&quot;</span><span class="token punctuation">)</span>


result <span class="token operator">=</span> say_hi<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;无返回值函数,返回的内容是：</span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;无返回值函数,返回的内容类型是：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">type</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


<span class="token comment"># 主动返回None的函数</span>
<span class="token keyword">def</span> <span class="token function">say_hi2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你好&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">None</span>


result <span class="token operator">=</span> say_hi2<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;无返回值函数,返回的内容是：</span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;无返回值函数,返回的内容类型是：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">type</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>None作用：</p><ul><li>用于表示空、无意义，用在函数无返回值上</li><li>用于声明无内容的 变量上，定义暂时不需要变量有具体值，可以用None代替，name = None</li></ul></li><li><p>if判断使用：</p><ul><li>在if判断中，None等同于False</li><li>一般用于在函数中主动返回None，配合if判断做相关处理</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">check_age</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&quot;成年人&quot;</span>
    <span class="token keyword">return</span> <span class="token boolean">None</span>


<span class="token keyword">print</span><span class="token punctuation">(</span>check_age<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># None</span>

<span class="token comment"># check_age(18)  返回成年人</span>
<span class="token keyword">if</span> <span class="token keyword">not</span> check_age<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># not等于None返回未成年(等于空，false)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;未成年&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><blockquote><p>注意事项</p></blockquote><ul><li>返回值如果不需要，可以省略</li></ul><h5 id="_9-变量作用域" tabindex="-1"><a class="header-anchor" href="#_9-变量作用域" aria-hidden="true">#</a> ⑨. 变量作用域</h5><ul><li>全局变量：函数外是全局变量，函数内也可以使用</li><li>局部变量：函数内是局部变量，只能在函数内使用</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>total <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 这是一个全局变量</span>


<span class="token comment"># 可写函数说明</span>
<span class="token keyword">def</span> <span class="token function">sum1</span><span class="token punctuation">(</span>arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 返回2个参数的和.&quot;</span>
    total <span class="token operator">=</span> arg1 <span class="token operator">+</span> arg2  <span class="token comment"># total在这里是局部变量.</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;函数内是局部变量 : &quot;</span><span class="token punctuation">,</span> total<span class="token punctuation">)</span>
    <span class="token keyword">return</span> total


<span class="token comment"># 调用sum1函数</span>
sum1<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>  <span class="token comment"># 30</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;函数外是全局变量 : &quot;</span><span class="token punctuation">,</span> total<span class="token punctuation">)</span>  <span class="token comment"># 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>global</p></blockquote><ul><li>global关键字可以设置函数内定义的变量为全局变量</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">200</span>


<span class="token keyword">def</span> <span class="token function">test_a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> a  <span class="token comment"># 设置内部定义的变量为全局变量</span>
    a <span class="token operator">=</span> <span class="token number">500</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;test_a：</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


test_a<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 500</span>

<span class="token comment"># 外部的值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>  <span class="token comment"># 500</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_10-匿名函数" tabindex="-1"><a class="header-anchor" href="#_10-匿名函数" aria-hidden="true">#</a> ⑩. 匿名函数</h5><ol><li>def 方式定义</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># def方式定义匿名函数</span>
<span class="token keyword">def</span> <span class="token function">compute</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y

<span class="token comment"># 传入函数，用函数名作为参数</span>
<span class="token keyword">def</span> <span class="token function">test_func</span><span class="token punctuation">(</span>compute<span class="token punctuation">)</span><span class="token punctuation">:</span>
    result <span class="token operator">=</span> compute<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment"># 作为参数方式传入</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>

test_func<span class="token punctuation">(</span>compute<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>lambda方式定义</li></ol><blockquote><p>lambda 传入参数:函数体(一行代码)</p></blockquote><ul><li>lambda是关键字，表示定义匿名函数</li><li>传入参数表示匿名函数的形式参数，如：x，y表示接受2个形式参数</li><li>函数体，就是函数的执行逻辑，要注意：只能写一行，无法写多行代码</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">test_fun</span><span class="token punctuation">(</span>compute<span class="token punctuation">)</span><span class="token punctuation">:</span>
    re <span class="token operator">=</span> compute<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">)</span>
<span class="token comment"># 匿名函数定义方式,只能临时使用一次</span>
test_fun<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> x <span class="token operator">+</span> y<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_101-示例" tabindex="-1"><a class="header-anchor" href="#_101-示例" aria-hidden="true">#</a> ⑩①. 示例</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 计算字符串长度</span>
<span class="token keyword">def</span> <span class="token function">my_len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    a <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> _ <span class="token keyword">in</span> data<span class="token punctuation">:</span>
        a <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

str1 <span class="token operator">=</span> <span class="token string">&quot;python&quot;</span>

my_len<span class="token punctuation">(</span>str1<span class="token punctuation">)</span>	<span class="token comment"># 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 判断体温</span>
<span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>temperature<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;联信科技欢迎您&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> temperature <span class="token operator">&lt;=</span> <span class="token number">37</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;你的体温是：</span><span class="token interpolation"><span class="token punctuation">{</span>temperature<span class="token punctuation">}</span></span><span class="token string">,体温正常请进！&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;你的体温是：</span><span class="token interpolation"><span class="token punctuation">{</span>temperature<span class="token punctuation">}</span></span><span class="token string">,您发热啦！&quot;</span></span><span class="token punctuation">)</span>


check<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>银行存款、取款、查询示例</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 查询余额</span>
<span class="token keyword">def</span> <span class="token function">query</span><span class="token punctuation">(</span>show_header<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> show_header<span class="token punctuation">:</span>  <span class="token comment"># True 显示查询余额分割线，False 不显示</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;-----查询余额------&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">,您的余额剩余：</span><span class="token interpolation"><span class="token punctuation">{</span>money<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


<span class="token comment"># 取款</span>
<span class="token keyword">def</span> <span class="token function">get_money</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> money
    money <span class="token operator">-=</span> num
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;取款</span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">}</span></span><span class="token string">成功！&quot;</span></span><span class="token punctuation">)</span>
    query<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>


<span class="token comment"># 存款</span>
<span class="token keyword">def</span> <span class="token function">saving</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> money
    money <span class="token operator">+=</span> num
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;-----存款------&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;存款</span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">}</span></span><span class="token string">成功！&quot;</span></span><span class="token punctuation">)</span>
    query<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>


<span class="token comment"># 主菜单</span>
<span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;---主菜单---&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">,你好，欢迎来到银行。请选择操作&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;查询余额\\t[输入1]&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;存款\\t\\t[输入2]&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;取款\\t\\t[输入3]&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;退出\\t\\t[输入4]&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入您的选择：&quot;</span><span class="token punctuation">)</span>


money <span class="token operator">=</span> <span class="token number">5000000</span>
name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入姓名：&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
    inp <span class="token operator">=</span> menu<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> inp <span class="token operator">==</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">:</span>
        query<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        b <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输入任意键返回主菜单：&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> b <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">continue</span>  <span class="token comment"># 进入下次循环</span>
    <span class="token keyword">elif</span> inp <span class="token operator">==</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">:</span>
        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入存款数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        saving<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
        b <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输入任意键返回主菜单：&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> b <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">continue</span>
    <span class="token keyword">elif</span> inp <span class="token operator">==</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">:</span>
        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入取款数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        get_money<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
        b <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输入任意键返回主菜单：&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> b <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">continue</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span>  <span class="token comment"># 结束循环</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,103),o=[t];function i(l,c){return s(),a("div",null,o)}const r=n(p,[["render",i],["__file","Python_2.html.vue"]]);export{r as default};

import{_ as s,o as n,c as a,e}from"./app.ca1881d0.js";const t={},o=e(`<h1 id="三-表数据处理" tabindex="-1"><a class="header-anchor" href="#三-表数据处理" aria-hidden="true">#</a> 三. 表数据处理</h1><h5 id="_1-select" tabindex="-1"><a class="header-anchor" href="#_1-select" aria-hidden="true">#</a> 1. select</h5><ol><li>select<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 精确列名称查询</span>
<span class="token keyword">select</span> 列名称 <span class="token keyword">from</span> 表名称<span class="token punctuation">;</span>
<span class="token comment">-- 查询表所有数据</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> 表名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>distinct<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 去重 去除列中重复的数据</span>
<span class="token keyword">select</span> <span class="token keyword">distinct</span> 列名称 <span class="token keyword">from</span> 表名称<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>where<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 筛选列中的值</span>
<span class="token keyword">select</span> 列名称 <span class="token keyword">from</span> 表名称 <span class="token keyword">where</span> 列 运算符 值<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>and or <ol><li>and<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- and语法</span>
<span class="token keyword">select</span> 列名称 <span class="token keyword">from</span> 表名称 <span class="token keyword">where</span> 列 运算符 值 <span class="token operator">and</span> 列 运算符 值<span class="token punctuation">;</span>
<span class="token comment">-- 使用 and 来显示所有姓为 &quot;carter&quot; 并且名为 &quot;thomas&quot; 的人</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> persons <span class="token keyword">where</span> firstname<span class="token operator">=</span><span class="token string">&#39;thomas&#39;</span> <span class="token operator">and</span> lastname<span class="token operator">=</span><span class="token string">&#39;carter&#39;</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>or<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- or语法</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> persons <span class="token keyword">where</span> 列 运算符 值 <span class="token operator">or</span> 列 运算符 值<span class="token punctuation">;</span>
<span class="token comment">-- 使用 or 来显示所有姓为 &quot;carter&quot; 或者名为 &quot;thomas&quot; 的人</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> persons <span class="token keyword">where</span> firstname<span class="token operator">=</span><span class="token string">&#39;thomas&#39;</span> <span class="token operator">or</span> lastname<span class="token operator">=</span><span class="token string">&#39;carter&#39;</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>and or 把 and 和 or 结合使用（使用圆括号来组成复杂的表达式）<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> persons <span class="token keyword">where</span> <span class="token punctuation">(</span>firstname<span class="token operator">=</span><span class="token string">&#39;thomas&#39;</span> <span class="token operator">or</span> firstname<span class="token operator">=</span><span class="token string">&#39;william&#39;</span><span class="token punctuation">)</span><span class="token operator">and</span> lastname<span class="token operator">=</span><span class="token string">&#39;carter&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li></ol><h5 id="_2-insert-into" tabindex="-1"><a class="header-anchor" href="#_2-insert-into" aria-hidden="true">#</a> 2. insert into</h5><h6 id="insert-into-语法" tabindex="-1"><a class="header-anchor" href="#insert-into-语法" aria-hidden="true">#</a> insert into 语法</h6><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> 表名称 <span class="token keyword">values</span> <span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span> 值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
<span class="token comment">-- 我们也可以指定所要插入数据的列</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> table_name <span class="token punctuation">(</span>列<span class="token number">1</span><span class="token punctuation">,</span> 列<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span> 值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-update" tabindex="-1"><a class="header-anchor" href="#_3-update" aria-hidden="true">#</a> 3. update</h5><h6 id="update-语法" tabindex="-1"><a class="header-anchor" href="#update-语法" aria-hidden="true">#</a> update 语法</h6><blockquote><p>update 语句用于修改表中的数据。</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> 表名称 <span class="token keyword">set</span> 列名称 <span class="token operator">=</span> 新值 <span class="token keyword">where</span> 列名称 <span class="token operator">=</span> 某值<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_4-delete" tabindex="-1"><a class="header-anchor" href="#_4-delete" aria-hidden="true">#</a> 4. delete</h5><h6 id="delete-语法" tabindex="-1"><a class="header-anchor" href="#delete-语法" aria-hidden="true">#</a> delete 语法</h6><blockquote><p>delete 语句用于删除表中的行。</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">delete</span> <span class="token keyword">from</span> 表名称 <span class="token keyword">where</span> 列名称 <span class="token operator">=</span> 值<span class="token punctuation">;</span>
<span class="token comment">-- 包含&quot;fred wilson&quot; 行会被删除：</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> person <span class="token keyword">where</span> lastname <span class="token operator">=</span> <span class="token string">&#39;wilson&#39;</span><span class="token punctuation">;</span>
<span class="token comment">-- 如果不加条件，则删除表中所有记录</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> 表名称<span class="token punctuation">;</span>
<span class="token comment">-- 删除表推荐使用以下方式，效率更高，先删除表，然后再创建一张一样的表</span>
<span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),p=[o];function l(c,r){return n(),a("div",null,p)}const d=s(t,[["render",l],["__file","mysql_2.html.vue"]]);export{d as default};

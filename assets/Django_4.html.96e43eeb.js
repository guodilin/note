import{_ as n,o as s,c as a,e}from"./app.ca1881d0.js";const t={},p=e(`<h1 id="模型" tabindex="-1"><a class="header-anchor" href="#模型" aria-hidden="true">#</a> 模型</h1><h5 id="_1-django应用及分布式路由" tabindex="-1"><a class="header-anchor" href="#_1-django应用及分布式路由" aria-hidden="true">#</a> 1.Django应用及分布式路由</h5><ol><li>创建应用</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>py manage.py startapp music <span class="token comment"># 创建多应用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>配置应用</li><li>在<code>settings.py</code>的<code>INSTALLED_APPS</code>列表中配置安装此应用</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>INSTALLED_APPS<span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token comment"># 用户信息模块</span>
    <span class="token string">&#39;music&#39;</span><span class="token punctuation">,</span> <span class="token comment"># 音乐模块</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>分布式路由 <ol><li>主路由中调用<code>include</code>函数</li><li>语法：<code>include(&#39;app名字.url模块名&#39;)</code></li><li>作用：用于将当前路由转到各个应用的路由配置文件的<code>urlpatterns</code>进行分布式处理</li></ol></li></ol><ul><li>主路由下的urls.py</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token punctuation">,</span> re_path<span class="token punctuation">,</span> include   <span class="token comment"># 引入include函数</span>
urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>index_view<span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">&#39;page_index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># 首页</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;admin/&#39;</span><span class="token punctuation">,</span> admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># 后台</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;music/&#39;</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">&#39;music.urls&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">#引入music子路由</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>music应用下urls.py</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token punctuation">,</span> re_path
<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> views

urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>index_view<span class="token punctuation">)</span>  <span class="token comment">#</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>应用下配置 <ol><li>应用下手动创建<code>templates</code>文件夹</li><li><code>settings.py</code>中开启应用模板功能 <ul><li><code>TEMPLATE</code>配置项中的<code>APP_DIRS</code>值为<code>True</code></li></ul></li><li>注意，应用下<code>templates</code>和外层<code>templates</code>都存在时 <ul><li>优先查找外层<code>templates</code>目录下的模板</li><li>按<code>INSTALLED_APPS</code>配置下的应用顺序逐层查找</li></ul></li></ol></li></ol><h5 id="_2-模型层" tabindex="-1"><a class="header-anchor" href="#_2-模型层" aria-hidden="true">#</a> 2.模型层</h5><h2 id="模型类" tabindex="-1"><a class="header-anchor" href="#模型类" aria-hidden="true">#</a> 模型类</h2><p>模型类创建</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 模型类创建格式</span>
<span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models
<span class="token keyword">class</span> 模型类名<span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>	<span class="token comment"># 表名=app名_类型类名</span>
    字段名 <span class="token operator">=</span> models<span class="token punctuation">.</span>字段类型<span class="token punctuation">(</span>字段选项<span class="token punctuation">)</span>
<span class="token comment"># 类 = 数据表</span>
<span class="token comment"># 对象 = 数据行</span>
<span class="token comment"># 属性 = 字段</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 生成迁移文件</span>
python manage.py makemigrations
<span class="token comment"># 执行迁移文件</span>
python manage.py migrate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models


<span class="token keyword">class</span> <span class="token class-name">Users</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    UserName <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span><span class="token string">&#39;用户名&#39;</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    Password <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span><span class="token string">&#39;用户密码&#39;</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    Mobile <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span><span class="token string">&#39;手机号&#39;</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字段类型" tabindex="-1"><a class="header-anchor" href="#字段类型" aria-hidden="true">#</a> 字段类型</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token comment"># varchar</span>
models<span class="token punctuation">.</span>DecimalField<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 小数</span>
models<span class="token punctuation">.</span>TextField<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 大量文本</span>
models<span class="token punctuation">.</span>DateField<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 日期</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="models-booleanfield" tabindex="-1"><a class="header-anchor" href="#models-booleanfield" aria-hidden="true">#</a> <code>models.BooleanField()</code></h5><ul><li>数据库类型：<code>tinyint()</code></li><li>编程语言中：使用True或False来表示值</li><li>在数据库中：使用1或0来表示具体的值</li></ul><h5 id="models-charfield" tabindex="-1"><a class="header-anchor" href="#models-charfield" aria-hidden="true">#</a> <code>models.CharField()</code></h5><ul><li><p>数据库类型：<code>varchar</code></p></li><li><p>注意：必须指定max_length参数值</p></li></ul><h5 id="models-datefield" tabindex="-1"><a class="header-anchor" href="#models-datefield" aria-hidden="true">#</a> <code>models.DateField()</code></h5><ul><li>数据库类型：data</li><li>作用：表示日期</li><li>参数 <ul><li>auto_now：每次保存对象时，自动设置该字段为当前时间（取值：True/False）</li><li>auto_now_add：当对象第一次创建时自动设置当前时间（取值：True/False）</li><li>default：设置当前时（取值：字符串格式时间如：’2019-6-1‘）</li></ul></li><li>注意：以上三个参数只能三选一</li></ul><h5 id="models-timefield" tabindex="-1"><a class="header-anchor" href="#models-timefield" aria-hidden="true">#</a> <code>models.TimeField()</code></h5><ul><li>作用：表示时间</li><li>参数 <ul><li>auto_now：每次保存对象时，自动设置该字段为当前时间（取值：True/False）</li><li>auto_now_add：当对象第一次创建时自动设置当前时间（取值：True/False）</li></ul></li></ul><h5 id="models-datetimefield" tabindex="-1"><a class="header-anchor" href="#models-datetimefield" aria-hidden="true">#</a> <code>models.DateTimeField</code></h5><ul><li>数据库类型：<code>datatime(6)</code></li><li>作用：表示日期和时间</li><li>参数 <ul><li>auto_now：每次保存对象时，自动设置该字段为当前日期和时间（取值：True/False）</li><li>auto_now_add：当对象第一次创建时自动设置当前日期和时间（取值：True/False）</li><li>default：设置当前时（取值：字符串格式时间如：’2019-6-12 14:15:02‘）</li></ul></li><li>注意：以上三个参数只能三选一</li></ul><h5 id="models-flatfield" tabindex="-1"><a class="header-anchor" href="#models-flatfield" aria-hidden="true">#</a> <code>models.FlatField()</code></h5><ul><li>数据库类型：double</li><li>编程语言中和数据库中都使用小数表示值</li></ul><h5 id="models-decimalfield" tabindex="-1"><a class="header-anchor" href="#models-decimalfield" aria-hidden="true">#</a> <code>models.DecimalField()</code></h5><ul><li>数据库类型：decimal(x,y)</li><li>编程语言中：使用小数表示该列的值</li><li>在数据库中：使用小数</li><li>参数 <ul><li>max_digits：位数总数，包含小数点后的位数，该值必须大于等于decimal_places</li><li>decimal_places：小数点后的数字数量</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 例如，要存储最高为 999.99 的数字，精度为小数点后 2 位，你可以使用</span>
models<span class="token punctuation">.</span>DecimalField<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> max_digits<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> decimal_places<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment"># 例如，并以 10 位小数的精度来存储最多约 10 亿的数字</span>
models<span class="token punctuation">.</span>DecimalField<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> max_digits<span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">,</span> decimal_places<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="models-emailfield" tabindex="-1"><a class="header-anchor" href="#models-emailfield" aria-hidden="true">#</a> <code>models.EmailField()</code></h5><ul><li>数据库类型：<code>varchar</code></li><li>编程语言和数据库中使用字符串</li><li>存储邮箱，来检查该值是否为有效的电子邮件地址</li></ul><h5 id="models-integerfield" tabindex="-1"><a class="header-anchor" href="#models-integerfield" aria-hidden="true">#</a> <code>models.IntegerField()</code></h5><ul><li>数据库类型：<code>int</code></li><li>编程语言和数据库中使用整数</li><li>说明 <ul><li>一个整数。从 -2147483648 到 2147483647 的值在 Django 支持的所有数据库中都是安全的。</li><li>它使用 <code>MinValueValidator </code>和 <code>MaxValueValidator </code>根据默认数据库支持的值来验证输入。</li><li>当 localize 为 False 时是 <code>NumberInput </code>否则，该字段的默认表单部件是 <code>TextInput</code>。</li></ul></li></ul><h5 id="models-imagefield" tabindex="-1"><a class="header-anchor" href="#models-imagefield" aria-hidden="true">#</a> <code>models.ImageField()</code></h5><ul><li>数据库类型：varchar(100)</li><li>作用：在数据库中为了保存图片的路径</li><li>编程语言和数据库中使用字符串</li><li>参数 <ul><li>max_length：默认100</li></ul></li></ul><h5 id="models-textfield" tabindex="-1"><a class="header-anchor" href="#models-textfield" aria-hidden="true">#</a> <code>models.TextField()</code></h5><ul><li>数据库类型：<code>longtext</code></li><li>作用：表示不定长的字符数据</li></ul><h5 id="models-urlfield" tabindex="-1"><a class="header-anchor" href="#models-urlfield" aria-hidden="true">#</a> <code>models.URLField()</code></h5><ul><li>作用：存储url</li><li>参数 <ul><li>max_length：默认200</li></ul></li></ul><h5 id="models-uuidfield" tabindex="-1"><a class="header-anchor" href="#models-uuidfield" aria-hidden="true">#</a> <code>models.UUIDField()</code></h5><p>作用：唯一标识符</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> uuid
<span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models

<span class="token keyword">class</span> <span class="token class-name">MyUUIDModel</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">id</span> <span class="token operator">=</span> models<span class="token punctuation">.</span>UUIDField<span class="token punctuation">(</span>primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> default<span class="token operator">=</span>uuid<span class="token punctuation">.</span>uuid4<span class="token punctuation">,</span> editable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token comment"># other fields</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字段选项" tabindex="-1"><a class="header-anchor" href="#字段选项" aria-hidden="true">#</a> 字段选项</h2><h5 id="primary-key" tabindex="-1"><a class="header-anchor" href="#primary-key" aria-hidden="true">#</a> primary_key</h5><p>如果设置为true，表示该列为主键，如果指定一个字段为主键，则此数据库表不会创建id字段</p><h5 id="blank" tabindex="-1"><a class="header-anchor" href="#blank" aria-hidden="true">#</a> blank</h5><p>设置为true时，字段可以为空，设置为false时，字段是必须填写的</p><h5 id="null" tabindex="-1"><a class="header-anchor" href="#null" aria-hidden="true">#</a> null</h5><p>如果设置true，表示该列值允许为空</p><p>默认为false，如果此选项为false建议加入default选项来设置默认值</p><h5 id="default" tabindex="-1"><a class="header-anchor" href="#default" aria-hidden="true">#</a> default</h5><p>设置所在列的默认值，如果字段选项null=false建议添加此选项</p><h5 id="db-index" tabindex="-1"><a class="header-anchor" href="#db-index" aria-hidden="true">#</a> db_index</h5><p>如果设置为true，表示为该列增加索引</p><h5 id="unique" tabindex="-1"><a class="header-anchor" href="#unique" aria-hidden="true">#</a> unique</h5><p>如果设置为true表示该字段在数据库中的值必须是唯一，不能重复出现的</p><h5 id="db-column" tabindex="-1"><a class="header-anchor" href="#db-column" aria-hidden="true">#</a> db_column</h5><p>指定列的名称，如果不指定的话则采用属性名作为列名</p><h5 id="verbose-name" tabindex="-1"><a class="header-anchor" href="#verbose-name" aria-hidden="true">#</a> verbose_name</h5><p>设置此字段在admin界面上的显示名称</p><h5 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h5><p>创建一个属性，表示用户名称，长度30个字符，必须唯一的，不能为空，创建索引</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> unique<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> null<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> db_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="模型类-meta类" tabindex="-1"><a class="header-anchor" href="#模型类-meta类" aria-hidden="true">#</a> 模型类-Meta类</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models

<span class="token keyword">class</span> <span class="token class-name">Book</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    title <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    price <span class="token operator">=</span> models<span class="token punctuation">.</span>DecimalField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span>default<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> decimal_places<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>

    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        <span class="token comment"># 可改变当前模型类对应的表名</span>
        db_table <span class="token operator">=</span> <span class="token string">&#39;users&#39;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-orm" tabindex="-1"><a class="header-anchor" href="#_3-orm" aria-hidden="true">#</a> 3.ORM</h2><h2 id="创建数据" tabindex="-1"><a class="header-anchor" href="#创建数据" aria-hidden="true">#</a> 创建数据</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 方案1</span>
Users<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span>属性<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">,</span> 属性<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment"># 方案2</span>
obj <span class="token operator">=</span> Users<span class="token punctuation">(</span>属性<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">,</span> 属性<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">)</span>
obj属性<span class="token operator">=</span>值
obj<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 可以代替编写view一样</span>
<span class="token comment"># 启动方式 </span>
python manage<span class="token punctuation">.</span>py shell
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 插入数据</span>
Users<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span>UserName<span class="token operator">=</span><span class="token string">&#39;guodilin&#39;</span><span class="token punctuation">,</span>Password<span class="token operator">=</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
<span class="token comment"># 查询所有数据，等于select * from users</span>
Users<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 按需查询，等于select ID, UserName * from users</span>
<span class="token comment"># 结果是字典</span>
Users<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;UserName&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 按需查询</span>
<span class="token comment"># 结果是元组</span>
Users<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>values_list<span class="token punctuation">(</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;UserName&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 排序，增</span>
Users<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;UserName&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>order_by<span class="token punctuation">(</span><span class="token string">&#39;-ID&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 查询sql语句</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;UserName&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>order_by<span class="token punctuation">(</span><span class="token string">&#39;-ID&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>query<span class="token punctuation">)</span> 
<span class="token comment"># 按多条件查询</span>
<span class="token comment"># WHERE (Mobile = 18079797959 AND UserName = guodilin )</span>
Users<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>UserName<span class="token operator">=</span><span class="token string">&#39;guodilin&#39;</span><span class="token punctuation">,</span>Mobile <span class="token operator">=</span> <span class="token number">18079797959</span><span class="token punctuation">)</span>
<span class="token comment"># 查询符合条件之外的全部数据</span>
Users<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>exclude<span class="token punctuation">(</span>UserName<span class="token operator">=</span><span class="token string">&#39;guodilin&#39;</span><span class="token punctuation">,</span>Mobile <span class="token operator">=</span> <span class="token number">18079797959</span><span class="token punctuation">)</span>
<span class="token comment"># 只有一条数据才返回，多条和无数据则返回错误</span>
Users<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span>UserName<span class="token operator">=</span><span class="token string">&#39;guodilin&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 正常</span>
Users<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span>ID<span class="token operator">=</span><span class="token string">&#39;c273600f62dc462fade09226551144c3&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 查询谓词</span>
Users<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>ID__exact<span class="token operator">=</span><span class="token string">&#39;c273600f62dc462fade09226551144c3&#39;</span><span class="token punctuation">)</span> 
__exact	<span class="token comment"># 等值查询</span>
__contains	<span class="token comment"># 包含指定值，模糊查询	%w%</span>
__startswith	<span class="token comment"># 以什么开始，模糊查询，w%</span>
__endswith	<span class="token comment"># 以什么结束，模糊查询，%w</span>
__gt	<span class="token comment">#大于</span>
__gte	<span class="token comment"># 大于等于</span>
__lt	<span class="token comment"># 小于</span>
__lte	<span class="token comment"># 小于等于</span>
__in	<span class="token comment">#	查找数据是否在指定范围内</span>
user<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>country__in<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;中国&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;美国&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># select * from user where country in (&#39;中国&#39;,&#39;美国&#39;);</span>
__range	<span class="token comment"># 查询数据是否在指定区间范围内</span>
user<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>age__range<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># selecct * from user where age BETWEEN 20 and 30;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 			<span class="token comment"># 查询全部记录</span>
get<span class="token punctuation">(</span><span class="token punctuation">)</span>			<span class="token comment"># 查询符合条件的单一记录</span>
<span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>		<span class="token comment"># 查询符合条件的多条记录</span>
exclude<span class="token punctuation">(</span><span class="token punctuation">)</span>		<span class="token comment"># 查询符合条件之外的全部记录</span>
values<span class="token punctuation">(</span><span class="token punctuation">)</span>		<span class="token comment"># 按需查询，结果是字典类型</span>
values_list<span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token comment"># 按需查询，结果是元组</span>
order_by<span class="token punctuation">(</span><span class="token punctuation">)</span>		<span class="token comment"># 排序，默认是按照升序排序 如果需要降序排序，在列前增加&#39;-&#39;表示</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,78),l=[p];function o(i,c){return s(),a("div",null,l)}const d=n(t,[["render",o],["__file","Django_4.html.vue"]]);export{d as default};

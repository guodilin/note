import{_ as n,o as s,c as a,e}from"./app.ca1881d0.js";const p={},l=e(`<h1 id="五-完整性" tabindex="-1"><a class="header-anchor" href="#五-完整性" aria-hidden="true">#</a> 五. 完整性</h1><h2 id="_1-实体完整性" tabindex="-1"><a class="header-anchor" href="#_1-实体完整性" aria-hidden="true">#</a> 1. 实体完整性</h2><ul><li>表中一行数据就是一个实体</li><li>保证实体完整性就是保证每一行数据的唯一性</li><li>实体完整性的约束类型 <ul><li>主键约束<code>primary key</code></li><li>唯一约束<code>unique</code></li><li>自动增长列<code>auto_increment</code></li></ul></li></ul><h5 id="_1-主键约束" tabindex="-1"><a class="header-anchor" href="#_1-主键约束" aria-hidden="true">#</a> 1. 主键约束</h5><blockquote><p>主键用于唯一标识表中的每一条数据<code>primary key</code></p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> person<span class="token punctuation">(</span>
<span class="token comment">-- 只需要添加 PRIMARY KEY</span>
  id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
  name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 插入数据</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> person <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;gdl&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> person <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;gdl&#39;</span><span class="token punctuation">)</span> <span class="token comment">-- id不允许重复</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意</p></blockquote><ol><li>如果将某一个字段设置成了主键，那么这个字段的取值就不能重复，而且不能是null。</li><li>一张表中只能有一个主键，不能出现多个主键</li><li>我们除了可以在字段数据后面添加，将这个字段变成主键以外，还可以写在最后 <code>primary key(字段)</code></li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> person<span class="token punctuation">(</span>
  id <span class="token keyword">INT</span><span class="token punctuation">,</span>
  name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-联合主键" tabindex="-1"><a class="header-anchor" href="#_2-联合主键" aria-hidden="true">#</a> 2. 联合主键</h5><blockquote><p>联合主键，同时将多个字段作为主键来使用，两个字段组合不重复即可</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> person<span class="token punctuation">(</span>
  name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	age <span class="token keyword">int</span> <span class="token punctuation">,</span>
	<span class="token keyword">PRIMARY</span> <span class="token keyword">key</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token comment">-- 只需要在key中加入两个字段</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> person <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;gdl&#39;</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">)</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> person <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;gdl&#39;</span><span class="token punctuation">,</span><span class="token number">199</span><span class="token punctuation">)</span> <span class="token comment">-- 两个字段组合不重复即可</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> person <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">,</span><span class="token number">199</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-唯一约束" tabindex="-1"><a class="header-anchor" href="#_3-唯一约束" aria-hidden="true">#</a> 3. 唯一约束</h5><blockquote><p>唯一约束用于保证某个字段的值永远不能重复<code>unique</code></p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> person<span class="token punctuation">(</span>
<span class="token comment">-- 添加 unique</span>
  id <span class="token keyword">INT</span> <span class="token keyword">unique</span><span class="token punctuation">,</span>
  name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> person <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;gdl&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主键和唯一键异同：</p><ul><li>唯一约束和主键约束一样，被约束的字段的取值都不能重复</li><li>主键在一张表中只能有一个，而唯一约束可以在表中可以有多个</li><li>主键的取值不能为null，而唯一约束的取值可以是null</li></ul><h5 id="_3-自动增长列" tabindex="-1"><a class="header-anchor" href="#_3-自动增长列" aria-hidden="true">#</a> 3. 自动增长列</h5><blockquote><p>自动增长约束的作用是让某个字段的取值从1开始递增，从而保证实体完整性<code>auto_incremnt</code></p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> person<span class="token punctuation">(</span>
  <span class="token comment">-- 添加 AUTO_INCREMENT 该字段将会自动增长</span>
  id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
  name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>ID<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 插入数据取值可以是null或者default</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> person <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> person <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意点：</p><ul><li>如果某个字段是自动增长的，那么这个字段必须是主键才可以</li><li>如果只是主键，那么取值不能是null，但是如果主键还是自动增长的，那么取值就可以是<code>null</code>或<code>default</code></li><li>在企业开发中我们应该如何选择主键</li><li>最少性：能用一个字段作为主键，就不要使用多个字段</li><li>稳定性：能用不被操作的字段作为主键，就不要使用会被操作的字段作为主键</li><li>一般情况下我们会定义一个名称叫做id</li></ul><h5 id="_4-修改约束" tabindex="-1"><a class="header-anchor" href="#_4-修改约束" aria-hidden="true">#</a> 4. 修改约束</h5><ol><li><p>修改主键约束</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>字段<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> person <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改唯一约束</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">(</span>字段<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> person <span class="token keyword">ADD</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改自动增长约束</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 字段名称 数据类型 <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">;</span>
<span class="token comment">-- 修改前提,该字段需要是主键</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> person <span class="token keyword">MODIFY</span> id <span class="token keyword">int</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_2-域完整性" tabindex="-1"><a class="header-anchor" href="#_2-域完整性" aria-hidden="true">#</a> 2. 域完整性</h2><h5 id="_1-域完整性" tabindex="-1"><a class="header-anchor" href="#_1-域完整性" aria-hidden="true">#</a> 1. 域完整性</h5><ol><li><p>使用非空约束<code>not null</code>,该字段将不允许为空</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> person<span class="token punctuation">(</span>
  id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
	<span class="token comment">-- 不允许为空，后面加not null</span>
  name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
	<span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>ID<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用默认值约束<code>default</code>，如果该字段未给值，将使用默认值</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> person<span class="token punctuation">(</span>
  id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
	<span class="token comment">-- 设置默认值，default</span>
  name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;guodilin&#39;</span><span class="token punctuation">,</span>
	<span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>ID<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意点：</p><ul><li>哪怕设置了默认值，传入了null之后，也不会使用默认值</li></ul></li></ol><h2 id="_2-参照完整性" tabindex="-1"><a class="header-anchor" href="#_2-参照完整性" aria-hidden="true">#</a> 2.参照完整性</h2><h5 id="_1-参照完整性" tabindex="-1"><a class="header-anchor" href="#_1-参照完整性" aria-hidden="true">#</a> ①. 参照完整性</h5><ol><li>语法格式</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 格式,在尾部添加</span>
<span class="token keyword">FOREIGN</span> <span class="token keyword">key</span><span class="token punctuation">(</span>外键字段名称<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> 主表名称<span class="token punctuation">(</span>主表主键名称<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>参照完整性示例</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 主表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> stu<span class="token punctuation">(</span>
	id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
	name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	gender <span class="token keyword">ENUM</span><span class="token punctuation">(</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;未知&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 成绩表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> grade<span class="token punctuation">(</span>
	id <span class="token keyword">int</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
	km <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	score <span class="token keyword">DOUBLE</span><span class="token punctuation">,</span>
	uid <span class="token keyword">int</span><span class="token punctuation">,</span>
  <span class="token comment">-- 两个表之间类型需要一样</span>
	<span class="token keyword">FOREIGN</span> <span class="token keyword">key</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> stu<span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意点： <ul><li>只有innoDB的存储引擎才支持外键约束</li><li>外键的数据类型必须和指向的主键一样</li><li>在一对多的关系中，外键一般定义在多的一方（一个学生有多门成绩，那么外键定义在成绩表中）</li><li>定义外键的表我们称之为从表，被外键引用的表我们称之为主表</li></ul></li></ul><h5 id="_2-动态添加外键" tabindex="-1"><a class="header-anchor" href="#_2-动态添加外键" aria-hidden="true">#</a> ②. 动态添加外键</h5><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 从表表名 <span class="token keyword">ADD</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>从表字段<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> 主表表名<span class="token punctuation">(</span>主表主键字段<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_3-查看外键" tabindex="-1"><a class="header-anchor" href="#_3-查看外键" aria-hidden="true">#</a> ③. 查看外键</h5><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 从表表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_4-动态删除外键" tabindex="-1"><a class="header-anchor" href="#_4-动态删除外键" aria-hidden="true">#</a> ④. 动态删除外键</h5><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 从表表名 <span class="token keyword">DROP</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> 外键字段<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,40),o=[l];function t(c,i){return s(),a("div",null,o)}const u=n(p,[["render",t],["__file","mysql_4.html.vue"]]);export{u as default};

import{_ as n,o as s,c as a,e}from"./app.ca1881d0.js";const t={},p=e(`<h1 id="五、基础操作" tabindex="-1"><a class="header-anchor" href="#五、基础操作" aria-hidden="true">#</a> 五、基础操作</h1><h2 id="_1-文件操作" tabindex="-1"><a class="header-anchor" href="#_1-文件操作" aria-hidden="true">#</a> 1. 文件操作</h2><h5 id="_1-打开文件" tabindex="-1"><a class="header-anchor" href="#_1-打开文件" aria-hidden="true">#</a> ①. 打开文件</h5><blockquote><p>可以打开一个已经存在的文件或者创建一个新文件</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法</span>
<span class="token builtin">open</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> mode<span class="token punctuation">,</span>encoding<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>fileName：是要打开的目标文件名的字符串，可以包含文件所在的具体路径</li><li>mode：设置打开文件的模式（访问模式）；只读，写入，追加等。</li><li>encoding：编码格式（推荐使用UTF-8）</li><li>mode三种基础访问模式参数 <ul><li><code>r</code> ：以只读方式打开</li><li><code>w</code> ：打开一个文件只用于写入</li><li><code>a</code> ：打开一个文件用于最加，如果文件存在，新的内容将会被写入到已有内容之后，不存在将创建新文件进行写入</li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;python.txt&quot;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:/python.txt&quot;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 读取, 不传入参数读取所有数据，然后封装到列表中，可以按大小传入数值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 读取文件，读取一行</span>
f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 读取全部行，得到列表</span>
f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># for循环出每一行数据</span>
<span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span>

<span class="token comment"># 关闭文件</span>
f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 通过with open语法打开文件，可以自动关闭</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;d:/python.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-写入文件" tabindex="-1"><a class="header-anchor" href="#_2-写入文件" aria-hidden="true">#</a> ②. 写入文件</h5><ol><li>写入文件使用open函数里传入参数<code>mode=&quot;w&quot;</code>进行写入</li><li>写入的方法有： <ul><li><code>wirte()</code> 写入内容</li><li><code>flush()</code> 刷新内容到硬盘中</li></ul></li><li>注意事项： <ul><li>w模式，文件不存在，会创建新文件</li><li>w模式，不存在，会清空原有内容</li><li>.<code>close()</code>方法，带有flush()方法的功能</li></ul></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;d:/python.txt&quot;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 写入文件</span>
f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 内容写入到内存中</span>

<span class="token comment"># 刷新</span>
f<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment"># 将内存中的内容写入到硬盘中</span>

<span class="token comment"># 关闭文件，内置了flush方法</span>
f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;d:/test.txt&quot;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>	<span class="token comment"># 把open转换给f</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-追加文件" tabindex="-1"><a class="header-anchor" href="#_3-追加文件" aria-hidden="true">#</a> ③. 追加文件</h5><ol><li>追加写入文件使用<code>open</code>函数里传入参数<code>mode=&quot;a&quot;</code>进行追加写入</li><li>追加写入的方法有和<code>w</code>模式一致 <ul><li><code>wirte()</code> 写入内容</li><li><code>flush()</code> 刷新内容到硬盘中</li></ul></li><li>注意事项</li><li>a模式，文件不存在，会创建新文件</li><li>a模式，文件存在，会在原有内容后面继续写入</li><li>可以使用\\n来写出换行符</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;d:/python.txt&quot;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 追加内容，在原有后面追加内容</span>
f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 内容写入到内存中</span>

<span class="token comment"># 刷新</span>
f<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment"># 将内存中的内容写入到硬盘中</span>

<span class="token comment"># 关闭文件，内置了flush方法</span>
f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;d:/test.txt&quot;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>	<span class="token comment"># 把open转换给f</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-实例" tabindex="-1"><a class="header-anchor" href="#_4-实例" aria-hidden="true">#</a> ④. 实例</h5><blockquote><p>去除行中包含测试的内容，并新增备份</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>fr <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;d:/test.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>
fw <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;d:/test.txt.bak&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 循环读取所有内容</span>
<span class="token keyword">for</span> line <span class="token keyword">in</span> fr<span class="token punctuation">:</span>
    <span class="token comment"># 去头去尾空格及换行符</span>
    line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 条件满足的跳出内容写入</span>
    <span class="token keyword">if</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;测试&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">continue</span>
    <span class="token comment"># 将内容写入备份</span>
    fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span>line<span class="token punctuation">)</span>
    fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 关闭文件</span>
fr<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
fw<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-异常捕获" tabindex="-1"><a class="header-anchor" href="#_2-异常捕获" aria-hidden="true">#</a> 2. 异常捕获</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 异常捕获</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token comment"># 可能出现错误的代码</span>
    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;d:/p.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 捕获指定异常</span>
<span class="token keyword">except</span> AttributeError <span class="token keyword">as</span> e<span class="token punctuation">:</span>  <span class="token comment"># 只捕获AttributeError异常</span>
    <span class="token comment"># 如果出现异常执行的代码</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>  <span class="token comment"># 打印异常错误</span>
<span class="token keyword">except</span><span class="token punctuation">(</span>NameError<span class="token punctuation">,</span> ZeroDivisionError<span class="token punctuation">)</span> <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>  <span class="token comment"># 捕获所有异常</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;d:/p.text&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我是else，是没有出现异常的时候执行的代码&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">finally</span><span class="token punctuation">:</span>    <span class="token comment"># 不管有没有异常都执行</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我是finally，不管有没有异常的时候执行的代码&quot;</span><span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-异常的传递" tabindex="-1"><a class="header-anchor" href="#_1-异常的传递" aria-hidden="true">#</a> ①. 异常的传递</h5><blockquote><p>异常是可以传递的</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;func1开始执行&quot;</span><span class="token punctuation">)</span>
    n <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;结束&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> n


<span class="token keyword">def</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;func2开始执行&quot;</span><span class="token punctuation">)</span>
    func1<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;func2结束&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        func2<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;出现异常</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-python模块" tabindex="-1"><a class="header-anchor" href="#_3-python模块" aria-hidden="true">#</a> 3. python模块</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 语法</span>
<span class="token punctuation">[</span><span class="token keyword">from</span> 模块名<span class="token punctuation">]</span> <span class="token keyword">import</span> <span class="token punctuation">[</span>模块<span class="token operator">|</span>类<span class="token operator">|</span>变量<span class="token operator">|</span>函数<span class="token operator">|</span><span class="token operator">*</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">as</span> 别名<span class="token punctuation">]</span>
<span class="token comment"># 常用组合方式</span>
<span class="token keyword">import</span> 模块名
<span class="token keyword">from</span> 模块名 <span class="token keyword">import</span> 类、变量、方法等
<span class="token keyword">from</span> 模块名 <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> 模块名 <span class="token keyword">as</span> 别名
<span class="token keyword">from</span> 模块名 <span class="token keyword">import</span> 功能名 <span class="token keyword">as</span> 别名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导入time模块</span>
<span class="token keyword">import</span> time

<span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 单独调取 time 类</span>
<span class="token keyword">from</span> time <span class="token keyword">import</span> time

<span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    <span class="token comment"># 无效，未导入sleep类</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 改别名</span>
<span class="token keyword">from</span> time <span class="token keyword">import</span> time <span class="token keyword">as</span> t

<span class="token keyword">print</span><span class="token punctuation">(</span>t<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导入所有功能</span>
<span class="token keyword">from</span> time <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-制作自定义模块" tabindex="-1"><a class="header-anchor" href="#_1-制作自定义模块" aria-hidden="true">#</a> ①. 制作自定义模块</h5><ol><li><p>新建一个python文件，命名为<code>my_module.py</code></p></li><li><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> my_module	<span class="token comment"># 导入</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>__main__</code></p><ul><li><p>只有当程序直接执行的时候才会进入<code>if</code>内部，如果是被导入的，则<code>if</code>无法进入</p></li><li><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 文件名（my_module.py）</span>
<span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span>

<span class="token comment"># 测试函数体，导入模块的时候不会执行</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    test<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    
<span class="token comment"># 输出：3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 写入</span>
<span class="token keyword">import</span> my_module
<span class="token comment"># 执行文件，不会返回 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><code>__all__</code></p><ul><li><p>可以控制<code>import *</code>的时候哪些功能可以导入</p></li><li><p>也可以控制python包，在<code>__init__.py</code>里控制<code>import *</code>可导入的内容</p></li><li><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 文件名（my_module.py）</span>
__all__ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">]</span>


<span class="token keyword">def</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span>


<span class="token keyword">def</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> my_module <span class="token keyword">import</span> <span class="token operator">*</span>

test1<span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token comment"># 2</span>
test2<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 不能使用,会报错</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><h5 id="_2-python包" tabindex="-1"><a class="header-anchor" href="#_2-python包" aria-hidden="true">#</a> ②. python包</h5><blockquote><p>文件夹中包含了<code>__init__.py</code>就是python包</p></blockquote><ol><li><p>导入包的语法</p><ul><li><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> 包名<span class="token punctuation">.</span>模块
包名<span class="token punctuation">.</span>模块<span class="token punctuation">.</span>功能<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> 包名 <span class="token keyword">import</span> 模块
模块<span class="token punctuation">.</span>功能<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> 包名<span class="token punctuation">.</span>模块 <span class="token keyword">import</span> 功能
功能<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><h5 id="_3-第三方包" tabindex="-1"><a class="header-anchor" href="#_3-第三方包" aria-hidden="true">#</a> ③. 第三方包</h5><ol><li>安装</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 默认</span>
pip <span class="token function">install</span> 包名称
<span class="token comment"># 使用临时下载源</span>
pip <span class="token function">install</span> <span class="token parameter variable">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple 包名称
<span class="token comment"># 快速配置阿里pip镜像</span>
pip config <span class="token builtin class-name">set</span> global.index-url https://mirrors.aliyun.com/pypi/simple/
pip config <span class="token builtin class-name">set</span> install.trusted-host mirrors.aliyun.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>导入包</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>pip更新</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># python 安装目录中运行</span>
python<span class="token punctuation">.</span>exe <span class="token operator">-</span>m pip install <span class="token operator">-</span><span class="token operator">-</span>upgrade pip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-json的数据转换" tabindex="-1"><a class="header-anchor" href="#_4-json的数据转换" aria-hidden="true">#</a> 4. <code>json</code>的数据转换</h2><h5 id="_1-字典转换json" tabindex="-1"><a class="header-anchor" href="#_1-字典转换json" aria-hidden="true">#</a> ①. 字典转换json</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> json

<span class="token comment"># 字典转换json</span>
data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;周&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">28</span><span class="token punctuation">}</span>

<span class="token comment"># 通过json.dumps(data)方法把字典转换为json数据</span>
data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;str&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 通过json.loads(data)方法把json数据转换为字典</span>
data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;list&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-列表转换json" tabindex="-1"><a class="header-anchor" href="#_2-列表转换json" aria-hidden="true">#</a> ②. 列表转换<code>json</code></h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> json

<span class="token comment"># 列表里嵌套字典类型的json数据转换</span>
data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;王&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;黄&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">19</span><span class="token punctuation">}</span><span class="token punctuation">]</span>

<span class="token comment"># 通过json.dumps(data)方法把python数据转换为json数据</span>
data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;str&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 通过json.loads(data)方法把json数据转换为python数据(列表)</span>
data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;list&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,47),o=[p];function i(c,l){return s(),a("div",null,o)}const d=n(t,[["render",i],["__file","Python_4.html.vue"]]);export{d as default};
